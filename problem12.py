# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th 
# triangle number would be 1 +2 +3 +4 +5 +6 +7 = 28.

# The first 10 triangle numbers are 1, 3, 6, 10, 15, 21, 28, 36, 45, 55

# The factors of the first 7 triangle numbers:
#	1: 1
#	3: 1, 3
#	6: 1, 2, 3, 6
#	10: 1, 2, 5, 10
#	15: 1, 3, 5, 15
#	21: 1, 3, 7, 21
#	28: 1, 2, 4, 7, 14, 28

# What is the value of the 1st triangle number to have over 500 divisors

import math

def main():
  
  target = 0
  counter = 0
  test_val = 0

  for x in range(1, 5):
    target = target + x
    print str(target) + ": " + str(listFactors(target))

  l = 0

  while (l<500):
    counter = counter + 1
    test_val = test_val + counter
    
    l = listFactors(test_val)
    #i = str(test_val) + " factors:  " + str(l) + "\n"
    #print i
  print test_val



def listFactors(num):
  numFactors = 0

  if (num == 1):
    return 1
  
  for x in range(1, int(math.floor(math.sqrt(num+1)))):
    temp = num/float(x)
    #print "x: " +  str(x)
    #print "temp: " + str(temp)
    
    if (temp == math.floor(temp)):
      numFactors = numFactors + 2

  if (math.sqrt(num) == math.floor(math.sqrt(num))):
    numFactors = numFactors - 1
         
  return numFactors




if __name__ == "__main__":
  main()